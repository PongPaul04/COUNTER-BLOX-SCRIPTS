-- Load the Orion Library
local OrionLib = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Orion/main/source'))()

-- Create the main window
local Window = OrionLib:MakeWindow({
    Name = "DOSHUB",
    HidePremium = false,
    SaveConfig = true,
    ConfigFolder = "OrionTest"
})

-- Create tabs
local EspTab = Window:MakeTab({
    Name = "ESP",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local AimbotTab = Window:MakeTab({
    Name = "AIMBOT",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local SettingsTab = Window:MakeTab({
    Name = "Settings",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Create sections
local EspSection = EspTab:AddSection({
    Name = "HIGHLIGHT"
})

local AimbotSection = AimbotTab:AddSection({
    Name = "LOCKS"
})

local SettingsSection = SettingsTab:AddSection({
    Name = "MISC"
})

-- Global variables
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

local AimbotEnabled = false
local AimbotHeld = false
local Smoothness = 2
local SmoothnessMax = 10
local HighlightEnabled = false
local HPBarEnabled = false
local HeadModEnabled = false
local HeadOrTorso = "Head" -- Default to modifying the Head
local scriptRunning = true
local highlightedPlayer = nil

-- Global settings for head and torso modification
_G.HeadSize = 15
_G.Disabled = true

-- Function to update properties of a part
local function updatePartProperties(part)
    if part then
        part.Size = Vector3.new(_G.HeadSize, _G.HeadSize, _G.HeadSize)
        part.Transparency = 1
        part.BrickColor = BrickColor.new("Red")
        part.Material = Enum.Material.Neon
        part.CanCollide = false
        part.Massless = true
    end
end

-- Function to create or update HP bar
local function createOrUpdateHPBar(character)
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    if not humanoid then return end

    local existingHPBar = character:FindFirstChild("HPBar")
    if existingHPBar then
        existingHPBar:Destroy()
    end

    local billboardGui = Instance.new("BillboardGui")
    billboardGui.Name = "HPBar"
    billboardGui.Size = UDim2.new(4, 0, 1, 0)
    billboardGui.StudsOffset = Vector3.new(0, 3, 0)
    billboardGui.AlwaysOnTop = true
    billboardGui.Parent = character

    local bgFrame = Instance.new("Frame")
    bgFrame.Size = UDim2.new(1, 0, 0.2, 0)
    bgFrame.Position = UDim2.new(0, 0, 0.8, 0)
    bgFrame.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    bgFrame.Parent = billboardGui

    local hpBar = Instance.new("Frame")
    hpBar.Size = UDim2.new(1, 0, 1, 0)
    hpBar.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
    hpBar.Parent = bgFrame

    local function updateHealth()
        local healthPercentage = humanoid.Health / humanoid.MaxHealth
        hpBar.Size = UDim2.new(healthPercentage, 0, 1, 0)
    end

    humanoid:GetPropertyChangedSignal("Health"):Connect(updateHealth)
    humanoid.Died:Connect(function()
        if billboardGui then billboardGui:Destroy() end
    end)

    updateHealth()
end

-- Function to highlight all players
local function highlightAllPlayers()
    if not scriptRunning then return end

    -- Iterate through all players
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            local character = player.Character or player.CharacterAdded:Wait()
            
            if character then
                -- Remove any existing highlights
                for _, obj in pairs(character:GetChildren()) do
                    if obj:IsA("Highlight") then
                        obj:Destroy()
                    end
                end

                -- Create a new highlight
                local highlight = Instance.new("Highlight")
                highlight.Adornee = character
                highlight.FillTransparency = 1  -- Make the inside of the highlight fully transparent

                -- Set the color based on team (if applicable)
                if player.Team == LocalPlayer.Team then
                    highlight.OutlineColor = Color3.fromRGB(0, 255, 0)  -- Green for teammates
                else
                    highlight.OutlineColor = Color3.fromRGB(255, 0, 0)  -- Red for enemies
                end
                
                highlight.Parent = character
            end
        end
    end
end

-- Function to identify the highlighted player
local function identifyHighlightedPlayer()
    highlightedPlayer = nil
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character then
            local highlight = player.Character:FindFirstChild("Highlight")
            if highlight and highlight.OutlineColor == Color3.fromRGB(0, 255, 0) then  -- Check for green highlight
                highlightedPlayer = player
                break
            end
        end
    end
end

-- Function to handle player added
local function onPlayerAdded(player)
    if not scriptRunning then return end
    player.CharacterAdded:Connect(function(character)
        if scriptRunning then
            highlightAllPlayers()
        end
    end)

    if player.Character then
        highlightAllPlayers()
    end
end

-- Function to handle player removing
local function onPlayerRemoving(player)
    if player.Character then
        for _, obj in pairs(player.Character:GetChildren()) do
            if obj:IsA("Highlight") or obj:IsA("BillboardGui") then
                obj:Destroy()
            end
        end
    end
end

-- Function to handle map changes
local function onMapChange()
    if not scriptRunning then return end
    highlightAllPlayers()
end

-- Function to initialize script
local function initializeScript()
    scriptRunning = true
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            onPlayerAdded(player)
        end
    end
end

-- Function to apply aimbot
local function applyAimbot()
    if AimbotEnabled and AimbotHeld then
        identifyHighlightedPlayer()
        if highlightedPlayer and highlightedPlayer.Character and highlightedPlayer.Character:FindFirstChildOfClass("HumanoidRootPart") then
            aimAt(highlightedPlayer.Character.HumanoidRootPart.Position)
        end
    end
end

-- Function to aim at a target with smooth transition
local function aimAt(targetPosition)
    local cameraPosition = Camera.CFrame.Position
    local direction = (targetPosition - cameraPosition).unit
    local targetCFrame = CFrame.new(cameraPosition, cameraPosition + direction)
    Camera.CFrame = Camera.CFrame:Lerp(targetCFrame, Smoothness / SmoothnessMax)
end

-- Function to handle input events
local function onInputBegan(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        AimbotHeld = true
    elseif input.KeyCode == Enum.KeyCode.Q then
        AimbotEnabled = not AimbotEnabled
        AimbotSection:GetToggle("Aimbot"):SetState(AimbotEnabled)
    elseif input.KeyCode == Enum.KeyCode.Insert then
        HighlightEnabled = not HighlightEnabled
        EspSection:GetToggle("Highlight"):SetState(HighlightEnabled)
        if not HighlightEnabled then
            for _, player in pairs(Players:GetPlayers()) do
                if player.Character then
                    for _, obj in pairs(player.Character:GetChildren()) do
                        if obj:IsA("Highlight") or obj:IsA("BillboardGui") then
                            obj:Destroy()
                        end
                    end
                end
            end
        else
            highlightAllPlayers()
        end
    elseif input.KeyCode == Enum.KeyCode.Home then
        if scriptRunning then
            createSuccessMessage()
        end
    elseif input.KeyCode == Enum.KeyCode.End then
        scriptRunning = false
        clearGui()
        print("Script stopped.")
    elseif input.KeyCode == Enum.KeyCode.Delete then
        scriptRunning = true
        initializeScript()
        print("Script Refreshed.")
    end
end

-- Function to handle input ended events
local function onInputEnded(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        AimbotHeld = false
    end
end

-- Connect events
Players.PlayerAdded:Connect(onPlayerAdded)
Players.PlayerRemoving:Connect(onPlayerRemoving)
game:GetService("Workspace").ChildAdded:Connect(onMapChange)
UserInputService.InputBegan:Connect(onInputBegan)
UserInputService.InputEnded:Connect(onInputEnded)

-- Initialize script
initializeScript()

-- Main loop to run aimbot and head modification
RunService.RenderStepped:Connect(function()
    if scriptRunning then
        applyAimbot()
        if HeadModEnabled then
            for _, player in ipairs(Players:GetPlayers()) do
                if player.Name ~= LocalPlayer.Name then
                    pcall(function()
                        local character = player.Character
                        if character then
                            local part
                            if HeadOrTorso == "Head" then
                                part = character:FindFirstChild("Head")
                            elseif HeadOrTorso == "Torso" then
                                part = character:FindFirstChild("UpperTorso") or character:FindFirstChild("LowerTorso") or character:FindFirstChild("Torso")
                            end
                            updatePartProperties(part)
                        end
                    end)
                end
            end
        end
    end
end)

-- Create GUI elements
EspSection:AddDropdown({
    Name = "Modify",
    Default = "Head",
    Options = {"Head", "Torso"},
    Callback = function(option)
        HeadOrTorso = option
    end
})

EspSection:AddToggle({
    Name = "Highlight",
    Default = true,
    Callback = function(value)
        HighlightEnabled = value
        if not HighlightEnabled then
            for _, player in pairs(Players:GetPlayers()) do
                if player.Character then
                    for _, obj in pairs(player.Character:GetChildren()) do
                        if obj:IsA("Highlight") or obj:IsA("BillboardGui") then
                            obj:Destroy()
                        end
                    end
                end
            end
        else
            highlightAllPlayers()
        end
    end
})

AimbotSection:AddToggle({
    Name = "Aimbot",
    Default = false,
    Callback = function(value)
        AimbotEnabled = value
    end
})

AimbotSection:AddSlider({
    Name = "Smoothness",
    Min = 1, -- slow
    Max = 10, -- instant
    Default = 2, -- current settings
    Color = Color3.fromRGB(255, 255, 255),
    Increment = 1,
    ValueName = "block",
    Callback = function(Value)
        Smoothness = Value
    end
})

EspSection:AddToggle({
    Name = "HP Bar",
    Default = false,
    Callback = function(value)
        HPBarEnabled = value
        if HPBarEnabled then
            for _, player in pairs(Players:GetPlayers()) do
                if player ~= LocalPlayer and player.Character then
                    createOrUpdateHPBar(player.Character)
                end
            end
        else
            for _, player in pairs(Players:GetPlayers()) do
                if player ~= LocalPlayer and player.Character then
                    local hpBar = player.Character:FindFirstChild("HPBar")
                    if hpBar then
                        hpBar:Destroy()
                    end
                end
            end
        end
    end
})

EspSection:AddToggle({
    Name = "Head Mod",
    Default = false,
    Callback = function(value)
        HeadModEnabled = value
    end
})
